{"version":3,"sources":["../../src/pages/transfer2/transfer2.module.ts","../../src/pages/transfer2/transfer2.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACJ;AACE;AAW9C;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAT/B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,iEAAa;aACd;YACD,OAAO,EAAE;gBACP,oEAAe;gBACf,sEAAe,CAAC,QAAQ,CAAC,iEAAa,CAAC;aACxC;SACF,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACdU;AACe;AACM;AAEX;AACK;AAEzD;;;;;GAKG;AAOH;IAmBE,uBAAmB,OAAsB,EAAS,YAA0B,EAAS,SAAoB,EAAU,cAA8B,EAAS,SAAoB;QAA3J,YAAO,GAAP,OAAO,CAAe;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAAS,cAAS,GAAT,SAAS,CAAW;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAS,cAAS,GAAT,SAAS,CAAW;QAjB9K,SAAI,GAAG,oBAAoB,CAAC;QAC5B,cAAS,GAAG,EAAE,CAAC;QACf,gBAAW,GAAG,EAAE,CAAC;QAOjB,WAAM,GAAG,IAAI,CAAC;QACd,gBAAW,GAAG,IAAI,CAAC;QACnB,gBAAW,GAAG,IAAI,CAAC;QAOjB,gDAAgD;IAClD,CAAC;IAND,qCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE,CAAC;IAC/B,CAAC;IAQD,gCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,qBAAW;YACzC,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC;QACtC,CAAC,EAAE,UAAC,GAAG;YACH,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAAI,GAAJ,UAAK,IAAI;QACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,cAAI;YACjC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;IACd,2BAA2B;IAC3B,uBAAuB;IACvB,qFAAqF;IACrF,4BAA4B;IAC5B,OAAO;IACP,IAAI;IAGJ,sCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;IAC5C,CAAC;IAID,8CAAsB,GAAtB;QAAA,iBAQC;QANC,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC,IAAI,CAAE,cAAI;YACzG,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;YACzB,KAAK,CAAC,6HAA6H,CAAC,CAAC;QACvI,CAAC,CAAC;IACJ,CAAC;IAED,kCAAU,GAAV;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IAlEU,aAAa;QAJzB,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;WACG;SAC9B,CAAC;sBAoB8K;OAnBnK,aAAa,CAsEzB;IAAD,CAAC;AAAA;SAtEY,aAAa,e","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { Transfer2Page } from './transfer2';\nimport { NgxQRCodeModule } from 'ngx-qrcode2';\n\n@NgModule({\n  declarations: [\n    Transfer2Page,\n  ],\n  imports: [\n    NgxQRCodeModule,\n    IonicPageModule.forChild(Transfer2Page),\n  ],\n})\nexport class Transfer2PageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transfer2/transfer2.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\nimport QRCode from 'qrcode';\nimport { Clipboard } from '@ionic-native/clipboard';\nimport { RestProvider } from '../../providers/rest/rest';\nimport { NgxQRCodeModule } from 'ngx-qrcode2';\n/**\n * Generated class for the RequestPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-transfer2',\n  templateUrl: 'transfer2.html',\n})\nexport class Transfer2Page {\n  \n  code = 'some sample string';\n  generated = '';\n  latestBlock = '';\n\n  //for cold wallets\n  toAccount : '';\n  amount: 0;\n  token : \"TRX\";\n  \n  qrData = null;\n  createdCode = null;\n  scannedCode = null;\n\n  displayQrCode() {\n    return this.generated !== '';\n  }\n\n  constructor(public navCtrl: NavController, public restProvider: RestProvider, public navParams: NavParams, private barcodeScanner: BarcodeScanner, public clipboard: Clipboard) {\n    //this.code = this.restProvider.account.address;\n  }\n\n\n \n  scanCode() {\n    this.barcodeScanner.scan().then(barcodeData => {\n      this.scannedCode = barcodeData.text;\n    }, (err) => {\n        console.log('Error: ', err);\n    });\n  }\n  \n  copy(text){\n    this.clipboard.copy(text).then(data => {\n      alert(\"copied \" + data);\n    });\n  }\n\n  // process() {\n  //   const qrcode = QRCode;\n  //   const self = this;\n  //   qrcode.toDataURL(self.code, { errorCorrectionLevel: 'H' }, function (err, url) {\n  //     self.generated = url;\n  //   })\n  // }\n\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad RequestPage');\n  }\n\n\n\n  signTransactionLocally(){\n\n    let latestBlockObj = JSON.parse(this.scannedCode);\n    this.restProvider.offlineSignSendTransaction(\"TRX\", this.toAccount, this.amount, latestBlockObj).then( data=>{\n      this.qrData = data;\n      console.log(this.qrData);\n      alert(\"Sign transaction completed, please generate a QR code, use a hot wallet to scan this QR code to sync transaction to server.\");\n    })\n  }\n\n  createCode() {\n    this.createdCode = JSON.stringify(this.qrData);\n  }\n\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/transfer2/transfer2.ts"],"sourceRoot":""}